name: Test WebSnip Chrome Extension

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting (if available)
      run: npm run lint --if-present
      
    - name: Run unit tests
      run: npm test
      
    - name: Run tests with coverage
      run: npm run test:coverage
      
    - name: Upload coverage reports to Codecov
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build --if-present
      
    - name: Validate manifest.json
      run: |
        if ! jq empty src/manifest.json; then
          echo "Invalid manifest.json"
          exit 1
        fi
        echo "Manifest validation passed"
        
    - name: Check file structure
      run: |
        required_files=("src/manifest.json" "src/background.js" "README.md")
        for file in "${required_files[@]}"; do
          if [ ! -f "$file" ]; then
            echo "Required file missing: $file"
            exit 1
          fi
        done
        echo "File structure validation passed"

  security:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level moderate
      
    - name: Check for sensitive data
      run: |
        # Check for potential secrets or API keys
        if grep -r -i "api.key\|secret\|password\|token" src/ --exclude-dir=node_modules || true; then
          echo "⚠️ Potential sensitive data found. Please review."
        else
          echo "✅ No obvious sensitive data found"
        fi